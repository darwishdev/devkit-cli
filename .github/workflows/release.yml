name: Release

on:
  push:
    tags:
      - "v*" # Trigger on tags like v1.0.0

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "stable"

      - name: Create release directory
        run: mkdir -p release

      - name: Build for Linux
        run: |
          GOOS=linux GOARCH=amd64 go build -o release/devkit-linux-amd64
          zip -j release/devkit-linux-amd64.zip release/devkit-linux-amd64

      - name: Build for macOS
        run: |
          GOOS=darwin GOARCH=amd64 go build -o release/devkit-darwin-amd64
          zip -j release/devkit-darwin-amd64.zip release/devkit-darwin-amd64

      - name: Build for Windows
        run: |
          GOOS=windows GOARCH=amd64 go build -o release/devkit-windows-amd64.exe
          zip -j release/devkit-windows-amd64.zip release/devkit-windows-amd64.exe

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Linux asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/devkit-linux-amd64.zip
          asset_name: devkit-linux-amd64.zip
          asset_content_type: application/zip

      - name: Upload macOS asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/devkit-darwin-amd64.zip
          asset_name: devkit-darwin-amd64.zip
          asset_content_type: application/zip

      - name: Upload Windows asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/devkit-windows-amd64.zip
          asset_name: devkit-windows-amd64.zip
          asset_content_type: application/zip
